#The mplot3d toolkit of matplotlib allows plotting of 3D objects such as scatterplots and 2D projections.

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("http://data-analytics.zybooks.com/Cars.csv")

fig = plt.figure()

#mplot3d is needed for projection='3d'
ax = fig.add_subplot(111, projection='3d')

ax.scatter(df['Speed'], df['Quality'], df['Angle'], c='b', marker='o')

ax.set_xlabel('Speed, X1')
ax.set_ylabel('Angle, X2')
ax.set_zlabel('Quality, Y')

plt.show()

#----------------------------------------------------------------------------------------
'''Similar to simple linear regression, ols(), fit(), and summary() are used to perform multiple regression, fit the data to the regression line, and display a summary. All of these functions require the statsmodels.formula.api module to be imported.

To perform multiple regression, the predictor variables are joined with + in the ols() function. Finally, the fit() method is used.'''

import pandas as pd
import statsmodels.formula.api as sms

fat = pd.read_csv('https://static-resources.zybooks.com/static/fat.csv')

# Response variable
Y = fat['body_fat_percent']

# Generates the linear regression model
# Multiple predictor variables are joined with +
model = sms.ols('Y ~ triceps_skinfold_thickness_mm + midarm_circumference_cm + thigh_circumference_cm', data = fat).fit()

# Prints the summary
print(model.summary())

'''Printed:
OLS Regression Results                            
==============================================================================
Dep. Variable:                      Y   R-squared:                       0.801
Model:                            OLS   Adj. R-squared:                  0.764
Method:                 Least Squares   F-statistic:                     21.52
Date:                Mon, 15 Jul 2019   Prob (F-statistic):           7.34e-06
Time:                        18:46:57   Log-Likelihood:                -44.312
No. Observations:                  20   AIC:                             96.62
Df Residuals:                      16   BIC:                             100.6
Df Model:                           3                                         
Covariance Type:            nonrobust                                         
=================================================================================================
                                    coef    std err          t      P>|t|      [0.025      0.975]
-------------------------------------------------------------------------------------------------
Intercept                       117.0847     99.782      1.173      0.258     -94.445     328.614
triceps_skinfold_thickness_mm     4.3341      3.016      1.437      0.170      -2.059      10.727
midarm_circumference_cm          -2.1861      1.595     -1.370      0.190      -5.568       1.196
thigh_circumference_cm           -2.8568      2.582     -1.106      0.285      -8.330       2.617
==============================================================================
Omnibus:                        1.200   Durbin-Watson:                   2.243
Prob(Omnibus):                  0.549   Jarque-Bera (JB):                0.830
Skew:                          -0.085   Prob(JB):                        0.660
Kurtosis:                       2.016   Cond. No.                     1.15e+04
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[2] The condition number is large, 1.15e+04. This might indicate that there are
strong multicollinearity or other numerical problems.

-----------------
The values in the coef column in the output correspond to the B-population regression parameters of the multiple regression model. The Intercept coef is Bsub0. The subsequent entries in the coef column correspond to B-coefficients of each predictor variable in the order entered in the ols() function. Thus, Y-hat = 117.0847 + 4.3341Xsub1 - 2.1861Xsub2 - 2.8568Xsub3.

#---------------------------------------------------------------------------------------
The model object generated by statsmodels also contains the fitted values and residuals for each sample. To display the fitted values, the fittedvalues property of the model is called.'''

import pandas as pd
import statsmodels.formula.api as sms

fat = pd.read_csv('https://static-resources.zybooks.com/static/fat.csv')

# Response variable
Y = fat['body_fat_percent']

# Generates the linear regression model
# Multiple predictor variables are joined with +
model = sms.ols('Y ~ triceps_skinfold_thickness_mm + midarm_circumference_cm + thigh_circumference_cm', data = fat).fit()

# Prints a list of the fitted values for each sample
print(model.fittedvalues)

'''Printed:
0     14.854990
1     20.218841
2     20.986682
3     23.127320
4     11.757607
5     22.243718
6     25.714317
7     22.270641
8     19.594818
9     20.548382
10    24.595555
11    24.992309
12    15.009401
13    13.672305
14    11.811948
15    23.727468
16    22.973604
17    26.785902
18    18.526280
19    20.487912
dtype: float64

To display the residuals, the resid property of the model is called.'''
# Prints a list of the residuals for each sample
print(model.resid)

'''Printed:
0    -2.954990
1     2.581159
2    -2.286682
3    -3.027320
4     1.142393
5    -0.543718
6     1.385683
7     3.129359
8     1.705182
9    -1.248382
10    0.804445
11    2.207691
12   -3.309401
13    4.127695
14    0.988052
15    0.172532
16   -0.373604
17   -1.385902
18   -3.726280
19    0.612088
dtype: float64